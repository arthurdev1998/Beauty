// <auto-generated />
using System;
using BeautySalon.Infraestructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BeautySalon.Infraestructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BeautySalon.Domain.Entities.Reserve", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cod_serial_reserve");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CheckIn")
                        .HasColumnType("datetime2")
                        .HasColumnName("checkin");

                    b.Property<DateTime>("CheckOut")
                        .HasColumnType("datetime2")
                        .HasColumnName("checkout");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int")
                        .HasColumnName("cod_clienteid");

                    b.Property<int?>("CostumerId")
                        .HasColumnType("int")
                        .HasColumnName("cod_costurmer");

                    b.Property<int>("QtfItens")
                        .HasColumnType("int")
                        .HasColumnName("quantify_itens");

                    b.HasKey("Id");

                    b.HasIndex("CostumerId");

                    b.ToTable("Reserves");
                });

            modelBuilder.Entity("BeautySalon.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cod_serial_usuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nome");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("passwordhash");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("passwordsalt");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("BeautySalon.Domain.Entities.Costumer", b =>
                {
                    b.HasBaseType("BeautySalon.Domain.Entities.User");

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cpf");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("phone");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("cod_serial_userid");

                    b.ToTable("costumer");
                });

            modelBuilder.Entity("BeautySalon.Domain.Entities.Reserve", b =>
                {
                    b.HasOne("BeautySalon.Domain.Entities.Costumer", "Costumers")
                        .WithMany("Reserves")
                        .HasForeignKey("CostumerId");

                    b.Navigation("Costumers");
                });

            modelBuilder.Entity("BeautySalon.Domain.Entities.Costumer", b =>
                {
                    b.HasOne("BeautySalon.Domain.Entities.User", null)
                        .WithOne()
                        .HasForeignKey("BeautySalon.Domain.Entities.Costumer", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BeautySalon.Domain.Entities.Costumer", b =>
                {
                    b.Navigation("Reserves");
                });
#pragma warning restore 612, 618
        }
    }
}
